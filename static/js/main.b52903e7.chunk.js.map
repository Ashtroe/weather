{"version":3,"sources":["components/Weather.js","components/Submit.js","components/Card.js","App.js","index.js"],"names":["Weather","props","icon","className","id","city","temp","precip","src","feel","wind","uvIndex","Submit","state","onClick","this","lat","lon","React","Component","Card","Date","getDay","dayTemp","weekDay","Math","floor","App","data","fiveDayTemps","current","uvi","daily","0","max","1","2","3","4","5","weekDays","getData","bind","fetch","then","response","json","setState","weather","main","description","feels_like","speed","coord","onKeyDown","e","keyCode","document","querySelector","value","style","display","name","dt","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b52903e7.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\n function Weather(props) {\r\n   if(props.icon){\r\n     return (\r\n       <div className='weather-ctnr'>\r\n        <div className=\"weather-left\" >\r\n          <h4 id='city-name'>{props.city}</h4>\r\n          <h1>{(props.temp)}</h1>\r\n          <h4>{(props.precip)}</h4>\r\n        </div>\r\n        <div className= 'weather-right'>\r\n          <img src= {props.icon}/>\r\n          <div className='secondary-info'>\r\n            <div className='small-icon' id='feel-icon'></div>\r\n            <p>{props.feel}</p>\r\n            <div className='small-icon' id='wind-icon'></div>\r\n            <p>{props.wind}</p>\r\n            <div className='small-icon' id='uv-icon' ></div>\r\n            <p>{props.uvIndex}</p>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  }else{\r\n    return(null)\r\n  }\r\n\r\n}\r\nexport default Weather\r\n","import React from 'react'\r\n\r\nexport default class Submit extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state ={\r\n\r\n    }\r\n  }\r\n  render(){\r\n    return(\r\n      <button\r\n      onClick={this.props.onClick}\r\n      lat = {this.props.lat}\r\n      lon = {this.props.lon}\r\n      >Submit</button>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\n\r\nfunction Card(props){\r\n  let days = [\r\n    'Sun',\r\n    'Mon',\r\n    'Tue',\r\n    'Wed',\r\n    'Thurs',\r\n    'Fri',\r\n    'Sat',\r\n  ]\r\n  let today = new Date().getDay()\r\n  if(props.dayTemp){\r\n    return(\r\n        <div className='week-card'>\r\n          <h2 id='week-day'>{days[props.weekDay]}</h2>\r\n          <h2 id='day-temp'>{Math.floor(props.dayTemp)+'°'}</h2>\r\n        </div>\r\n    )\r\n  }else{\r\n    return('')\r\n  }\r\n\r\n}\r\n\r\nexport default Card\r\n","import React from 'react';\nimport './styles.css'\nimport Weather from './components/Weather.js'\nimport Submit from './components/Submit.js'\nimport Card from './components/Card.js'\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n\n    this.state={\n      data:{},\n      icon:null,\n      temp:null,\n      feel:null,\n      wind:null,\n      uvIndex:null,\n      fiveDayTemps:{\n        current:{\n          uvi:null,\n        },\n        daily:{\n          0:{\n            temp:{\n              max:null\n            }\n          },\n          1:{\n            temp:{\n              max:null\n            }\n          },\n          2:{\n            temp:{\n              max:null\n            }\n          },\n          3:{\n            temp:{\n              max:null\n            }\n          },\n          4:{\n            temp:{\n              max:null\n            }\n          },\n          5:{\n            temp:{\n              max:null\n            }\n          },\n        },\n      },\n      weekDays:[]\n    }\n\n    this.getData = this.getData.bind(this)\n  }\n  getData(city){\n\n    fetch('https:api.openweathermap.org/data/2.5/weather?q='+ city +'&units=imperial&appid=04b8e3d0941e9ffc8add608468e01320')\n      .then(response=>response.json())\n      .then(response=>{\n        this.setState({\n          data:response,\n          icon:'https://openweathermap.org/img/wn/' + response.weather[0].icon + '@2x.png',\n          temp: Math.floor(response.main.temp) + '°',\n          precip:response.weather[0].description,\n          feel: Math.floor(response.main.feels_like) + '°',\n          wind: response.wind.speed + ' mph',\n          lat: response.coord.lat,\n          lon: response.coord.lon,\n\n        })\n        return (response);\n      })\n      .then(response=>{\n        return fetch('https://api.openweathermap.org/data/2.5/onecall?lat=' + response.coord.lat + '&lon=' + response.coord.lon + '&exclude=hourly,minutely&units=imperial&appid=04b8e3d0941e9ffc8add608468e01320')\n      })\n      .then(response=>response.json())\n      .then(response=>{\n        this.setState({\n          fiveDayTemps: response\n        })\n      })\n\n    }\n\n\n\n\n  render(){\n\n    return(\n    <div className='app-ctnr'>\n      <div className='search-ctnr'>\n      <input className= 'city'\n        onKeyDown={\n          (e)=>{\n            if(e.keyCode===13){\n              this.getData(document.querySelector('.city').value)\n              document.querySelector('.week-ctnr').style.display = 'flex'\n            }\n          }\n        }\n        />\n        <Submit\n          onClick={()=>{\n            this.getData(document.querySelector('.city').value)\n            document.querySelector('.week-ctnr').style.display = 'flex'\n          }}\n          lat= {this.state.lat}\n          lon= {this.state.lon}\n        />\n\n      </div>\n\n        <Weather\n          city={this.state.data.name}\n          icon={this.state.icon}\n          temp={this.state.temp}\n          precip={this.state.precip}\n          feel={this.state.feel}\n          wind={this.state.wind}\n          uvIndex={this.state.fiveDayTemps.current.uvi}\n        />\n        <div className='week-ctnr'>\n          <Card weekDay= {new Date(this.state.fiveDayTemps.daily[1].dt * 1000).getDay()} dayTemp={this.state.fiveDayTemps.daily[1].temp.max} />\n          <Card weekDay= {new Date(this.state.fiveDayTemps.daily[2].dt * 1000).getDay()} dayTemp={this.state.fiveDayTemps.daily[2].temp.max} />\n          <Card weekDay= {new Date(this.state.fiveDayTemps.daily[3].dt * 1000).getDay()} dayTemp={this.state.fiveDayTemps.daily[3].temp.max} />\n          <Card weekDay= {new Date(this.state.fiveDayTemps.daily[4].dt * 1000).getDay()} dayTemp={this.state.fiveDayTemps.daily[4].temp.max} />\n          <Card weekDay= {new Date(this.state.fiveDayTemps.daily[5].dt * 1000).getDay()} dayTemp={this.state.fiveDayTemps.daily[5].temp.max} />\n        </div>\n      </div>\n  )}\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport  './styles.css'\n\n\nReactDOM.render(\n  <App />\n,document.getElementById('root')\n);\n"],"sourceRoot":""}